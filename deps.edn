{:paths
 ["src" "resources"]

 :deps
 {;; Application
  org.clojure/clojure {:mvn/version "1.12.0"}
  com.brunobonacci/mulog {:mvn/version "0.9.0"}}

 :aliases
 {:mvn/artifact-id clj-hsm
  :mvn/group-id    io.github.baskeboler
  :mvn/version     "0.0.1"
  :jar/file-name   "clj_hsm.jar"

  :deploy {:extra-deps {slipset/deps-deploy {:mvn/version "0.2.2"}}
           :exec-fn deps-deploy.deps-deploy/deploy
           :exec-args {:installer :remote
                       :sign-releases? true
                       :artifact :jar/file-name}}

  :install {:extra-deps {slipset/deps-deploy {:mvn/version "0.2.2"}}
            :exec-fn deps-deploy.deps-deploy/deploy
            :exec-args {:installer :local
                        :artifact :jar/file-name}}
  
  ;; Clojure.main execution of application
  :run/app
  {:main-opts ["-m" "baskeboler.clj-hsm"]}

  ;; Clojure.exec execution of specified function
  :run/greet
  {:exec-fn baskeboler.clj-hsm/greet
   :exec-args {:name "Clojure"}}

  ;; Add libraries and paths to support additional test tools
  :test/env
  {}

  :vscode-repl
  {:extra-paths ["test" "dev"]
   :extra-deps {djblue/portal                {:mvn/version "0.51.1"}   ; portal data inspector
                clj-commons/clj-yaml         {:mvn/version "1.0.27"}   ; portal yaml support (optional)
                org.clojure/tools.namespace  {:mvn/version "1.4.5"}
                org.clojure/tools.trace      {:mvn/version "0.7.11"}
                org.slf4j/slf4j-nop          {:mvn/version "2.0.12"}
                com.brunobonacci/mulog       {:mvn/version "0.9.0"}
                lambdaisland/kaocha          {:mvn/version "1.87.1366"}
                org.clojure/test.check       {:mvn/version "1.1.1"}
                criterium/criterium          {:mvn/version "0.4.6"}}}
  ;; Test runner - local and CI
  ;; call with :watch? true to start file watcher and re-run tests on saved changes
  :test/run
  {:extra-paths ["test"]
   :extra-deps {lambdaisland/kaocha {:mvn/version "1.87.1366"}}
   :main-opts   ["-m" "kaocha.runner"]
   :exec-fn kaocha.runner/exec-fn
   :exec-args {:randomize? false
               :fail-fast? true}}

  ;; tools.build `build.clj` built script
  :build
  {:replace-paths ["."]
   :replace-deps {io.github.clojure/tools.build
                  {:git/tag "v0.9.4" :git/sha "76b78fe"}
                  slipset/deps-deploy {:mvn/version "0.2.1"}}
   :ns-default build}}}
